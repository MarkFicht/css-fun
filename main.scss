* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  //background-color: #222;

  //background: rgb(131,58,180);
  //background: linear-gradient(90deg, rgba(131,58,180,1) 0%, rgba(253,29,29,1) 50%, rgba(252,176,69,1) 100%);

  background: rgb(30,116,196);
  background: radial-gradient(circle, rgba(30,116,196,1) 0%, rgba(9,45,60,1) 100%);

  color: white;
}

.container {
  margin: 0 auto;

  h2 {
    text-align: center;
    margin: 70px;
    font-size: 35px;
    position: relative;
    display: flex;
    justify-content: center;

    &:before {
      content: '';
      position: absolute;
      top: 45px;
      width: 600px;
      height: 3px;
      background-color: white;

    }
  }
}

//**********************************
//--- LOGO M.F.
//**********************************
$widthMFLogo: 310px;
$heightMFLogo: 126px;
$MFAnimationTime: .5s;

@mixin MFBorderAnime() {
  position: absolute;
  bottom: 0;

  width: 10%;
  height: 0;
  border-bottom: 8px solid darkseagreen;
}

//---
.div-mf {
  //border: 4px solid darkseagreen;
  width: $widthMFLogo;
  height: $heightMFLogo;
  margin: auto;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  overflow: hidden;
  cursor: pointer;
}

.border-mf1 {
  @include MFBorderAnime();
  left: $widthMFLogo/2;
}

.border-mf2 {
  @include MFBorderAnime();
  right: $widthMFLogo/2;
}

.logo-mf {
  width: 250px;
  height: 90px;
  display: flex;
  overflow: hidden;
  z-index: 10;
  transform: scale(0.8);
  transition: all $MFAnimationTime/2 linear;

  .m {
    width: 67%;
    height: 100%;
    position: relative;
  }
  .f {
    width: 33%;
    height: 100%;
    position: relative;
  }
}

.div-mf:hover {

  & .border-mf1 {
    animation: borderAnimation1 forwards $MFAnimationTime linear;
  }

  & .border-mf2 {
    animation: borderAnimation2 forwards $MFAnimationTime linear;

    &:before {
      content: '';
      display: block;
      border-top: 6px solid darkseagreen;
      width: 0;
      animation: borderAnimation3 forwards $MFAnimationTime/2 $MFAnimationTime/2 linear;
    }
  }

  & .logo-mf {
    transform: scale(0.9);
  }

  & .ele-5 {
    width: 50px;
    transition: all $MFAnimationTime/2 $MFAnimationTime/2 linear;
  }

  & .ele-6 {
    width: 30px;
    transition: all $MFAnimationTime/2 $MFAnimationTime/2 linear;
  }
}

@keyframes borderAnimation1 {
  from { width: 10%; border-bottom: 8px solid darkseagreen; }
  25% { width: 25%; border-bottom: 7px solid darkseagreen; height: 0; border-right: 7px solid darkseagreen; }
  50% { width: 50%; border-bottom: 6px solid darkseagreen; height: 0; border-right: 6px solid darkseagreen; }
  75% { width: 50%; border-bottom: 5px solid darkseagreen; height: 50%; border-right: 5px solid darkseagreen; }
  to { width: 50%; border-bottom: 4px solid darkseagreen; height: 100%; border-right: 4px solid darkseagreen; }
}

@keyframes borderAnimation2 {
  from { width: 10%; border-bottom: 8px solid darkseagreen; }
  25% { width: 50%; border-bottom: 7px solid darkseagreen; height: 0; border-left: 7px solid darkseagreen; }
  50% { width: 50%; border-bottom: 6px solid darkseagreen; height: 100%; border-left: 6px solid darkseagreen; }
  to { width: 50%; border-bottom: 4px solid darkseagreen; height: 100%; border-left: 4px solid darkseagreen; }
}

@keyframes borderAnimation3 {
  from { width: 0; border-top: 6px solid darkseagreen; }
  to { width: 200.5%; border-top: 4px solid darkseagreen; }
}

//--- Logo inside
.ele-4, .ele-3, .ele-2, .ele-1 {
  background-color: white;
  height: 100px;
  width: 25px;
  position: absolute;
}

.ele-2 {
  right: 64px;
}

.ele-4 {
  right: 0;
}

.ele-3, .ele-1 {
  transform: rotate(35deg);
  right: 38px;
  top: -5px;
  height: 125px;
}

.ele-1 {
  right: 103px;
}

.ele-5, .ele-6 {
  margin-left: 7px;
  height: 22px;
  //width: 50px;
  width: 0;
  background-color: darkseagreen;
}

.ele-6 {
  position: absolute;
  top: 35px;
  //width: 30px;
  width: 0;
}

//**********************************
//--- DANCING CUBE
//**********************************
$cubeSize: 100px;
$axisZCube: 50px; // 1/2 cubeSize

.dancing-cube {
  margin: auto;
  width: $cubeSize;
  height: $cubeSize;
  position: relative;
  //perspective: 1000px;
}

.cube {
  width: 100%;
  height: 100%;
  position: absolute;
  transform-style: preserve-3d;
  transition: 1s transform linear;
  //perspective: 1000px;
}

.cube > div {
  width: $cubeSize;
  height: $cubeSize;
  border: 7px solid black;
  //border-radius: 50%;
  //margin: 200px; // IMPORTANT FOR DANCING CUBE ! for X Y
  //margin: 200px 0;
  margin: 0 200px;
  box-sizing: border-box;
  position: absolute;
}

.front {
  background-color: green;
  transform: rotateX(0deg) translateZ($axisZCube);
}

.back {
  background-color: blue;
  transform: rotateY(180deg) translateZ($axisZCube);
}

.bottom {
  background-color: red;
  transform: rotateX(-90deg) translateZ($axisZCube);
}

.top {
  background-color: blueviolet;
  transform: rotateX(90deg) translateZ($axisZCube);
}

.right {
  background-color: orange;
  transform: rotateY(90deg) translateZ($axisZCube);
}

.left {
  background-color: pink;
  transform: rotateY(-90deg) translateZ($axisZCube);
}

.move-left-cube {
  transform: rotateX(30deg) rotateY(0deg);
}

.dance {  // working only with margin in .cube > div
  animation: dancing infinite 3s linear;
}

@keyframes dancing {
  from { transform: rotateX(10deg) rotateY(0deg); }
  to { transform: rotateX(10deg) rotateY(360deg); }
}

//**********************************
//--- FUTURE GALLERY
//**********************************
$galleryHeight: 150px;
$galleryWidth: 200px;
$axisZGallery: 300px;
$galleryColor: aquamarine;

@mixin btns() {
  position: absolute;
  font-size: 70px;
  border: none;
  outline: none;
  background: transparent;
  cursor: pointer;
  top: 40px;
  color: $galleryColor;
  text-shadow: 0 0 10px rgba(0,0,0,0.99);
}

.fixed {
  width: 900px;
  height: 200px;
  margin: 0 auto;
  position: relative;
}

.btn-fg1 {
  @include btns();
  left: 0;
}

.btn-fg2 {
  @include btns();
  right: 0;
}

.future-gallery {
  margin: 120px auto 0 auto;
  //width: $galleryWidth *1.5;
  width: $galleryWidth;
  height: $galleryHeight; // -> only in this selector. Another perspective with height 0 or more :)
  position: relative;
  perspective: 1500px;
  //transform: rotate(5deg);
}

.gallery-m-f {
  width: 100%;
  height: 100%;
  position: absolute;
  transform-style: preserve-3d;
}

.gallery-m-f > div {
  width: $galleryWidth;
  height: $galleryHeight;
  border: 3px solid black;
  border-radius: 20px;
  box-sizing: border-box;
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  color: #222;
  font-size: 40px;
  font-weight: bold;
  opacity: .9;
}

.gallery-future1 {
  background-color: $galleryColor;
  transform: rotateY(0deg) translateZ($axisZGallery);
}

.gallery-future2 {
  background-color: $galleryColor;
  transform: rotateY(60deg) translateZ($axisZGallery);
}

.gallery-future3 {
  background-color: $galleryColor;
  transform: rotateY(120deg) translateZ($axisZGallery);
}

.gallery-future4 {
  background-color: $galleryColor;
  transform: rotateY(180deg) translateZ($axisZGallery);
}

.gallery-future5 {
  background-color: $galleryColor;
  transform: rotateY(240deg) translateZ($axisZGallery);
}

.gallery-future6 {
  background-color: $galleryColor;
  transform: rotateY(300deg) translateZ($axisZGallery);
}

.move-gallery {
  //transform: rotateX(5deg) rotateY(-60deg);
  animation: gallery-animation infinite 20s linear;
}

@keyframes gallery-animation {
  from { transform: rotateX(-1deg) rotateY(0deg); }
  50% { transform: rotateX(1deg) rotateY(-180deg); }
  to { transform: rotateX(-1deg) rotateY(-360deg); }
}

//**********************************
//--- ROLLER SELECT
//**********************************
$axisZRoller: 34px;

.roller-select {
  width: 900px;
  height: 150px;
  margin: 0 auto;
  display: flex;
  justify-content: center;
  align-items: center;
}

//---
.roller-position {
  width: 200px;
  height: 50px;
  position: relative;
  margin-right: 50px;
  perspective: 900px;
  perspective-origin: -120%;
  //perspective-origin: -120% 300%;
}

.roller {
  width: 100%;
  height: 100%;
  position: absolute;
  transform-style: preserve-3d;
  //transform: rotateY(90deg); // helping for setting axis Z
  animation: roller-animation infinite 12s linear;
}

.roller > div {
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: tomato;
  border: 2px solid black;
  text-align: center;
  line-height: 50px;
  font-size: 20px;
  font-weight: bold;
}

.roller-option1 {
  transform: rotateX(0deg) translateZ($axisZRoller);
}

.roller-option2 {
  transform: rotateX(72deg) translateZ($axisZRoller);
}

.roller-option3 {
  transform: rotateX(144deg) translateZ($axisZRoller);
}

.roller-option4 {
  transform: rotateX(216deg) translateZ($axisZRoller);
}

.roller-option5 {
  transform: rotateX(288deg) translateZ($axisZRoller);
}

@keyframes roller-animation {
  from { transform: rotateX(0deg); }
  to { transform: rotateX(-360deg); }
}

//**********************************
//--- RAINBOW BORDER SHADOW
//**********************************
$rainbowBorderSize: 2px;
$rainbowBorderWidth: 400px;
$rainbowBorderHeight: 250px;

.rainbow-border {
  position: relative;
  margin: 100px auto;
  width: $rainbowBorderWidth;
  height: $rainbowBorderHeight;
  //background: linear-gradient(0deg, #000, #262626);
  background: #111;
  display: flex;
  align-items: center;
  text-align: center;

  p {
    font-size: 50px;
    font-weight: bold;
    text-shadow: 2px 1px #fff;
    color: #111;
    letter-spacing: 5px;
  }

  &:before, &:after {
    content: '';
    //width: calc(100% + 10px);
    //height: calc(100% + 10px);
    width: $rainbowBorderWidth + $rainbowBorderSize*2;
    height: $rainbowBorderHeight + $rainbowBorderSize*2;
    position: absolute;
    top: - $rainbowBorderSize;
    left: - $rainbowBorderSize;
    background: linear-gradient(45deg, #fb0094, #0000ff, #00ff00, #ffff00, #ff0000, #fb0094, #0000ff, #00ff00, #ffff00, #ff0000);
    background-size: 500%;
    z-index: -1;
    animation: rainbowGradient 25s linear infinite;
  }

  &:after {
    filter: blur(30px);
  }
}

@keyframes rainbowGradient {
  0% { background-position: 0 0; }
  50% { background-position: 400% 0; }
  100% { background-position: 0 0; }
}

