//**********************************
//--- MOVING CUBE
//**********************************

.dance {  // with margin in .cube > div, better effect :)
  animation: dancing infinite 3s linear;
}

//--- Maybe btns in the future :)
.move-left-cube {
  transform: rotateX(30deg) rotateY(0deg);
}

@keyframes dancing {
  from { transform: rotateX(-15deg) rotateY(0deg); }
  50% { transform: rotateX(15deg) rotateY(180deg); }
  to { transform: rotateX(-15deg) rotateY(360deg); }
}

//**********************************

.dancing-cube {
  margin: auto;
  width: $cubeSize;
  height: $cubeSize;
  position: relative;
  perspective: 1000px;
}

.cube {
  width: 100%;
  height: 100%;
  position: absolute;
  transform-style: preserve-3d;
  transition: 1s transform linear;
}

.cube > div {
  width: $cubeSize;
  height: $cubeSize;
  border: 7px solid black;
  //margin: 200px;      // IMPORTANT FOR MOVING CUBE ! for X Y
  //margin: 200px 0;    // or
  margin: 0 170px;
  box-sizing: border-box;
  position: absolute;
  text-align: center;
  line-height: $cubeSize - 14px;
  font-weight: bold;
  font-size: 30px;
}

.front {
  background-color: green;
  transform: rotateX(0deg) translateZ($axisZCube);
}

.back {
  background-color: blue;
  transform: rotateY(180deg) translateZ($axisZCube);
}

.bottom {
  background-color: red;
  transform: rotateX(-90deg) translateZ($axisZCube);
}

.top {
  background-color: blueviolet;
  transform: rotateX(90deg) translateZ($axisZCube);
}

.right {
  background-color: orange;
  transform: rotateY(90deg) translateZ($axisZCube);
}

.left {
  background-color: pink;
  transform: rotateY(-90deg) translateZ($axisZCube);
}